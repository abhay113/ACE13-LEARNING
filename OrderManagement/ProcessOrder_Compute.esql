
CREATE COMPUTE MODULE ProcessOrder_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		DECLARE requiredQty INTEGER Environment.Variables.availableQuantity; -- Replace with actual quantity from the order
		DECLARE availableQty INTEGER CAST(InputRoot.JSON.Data.stock AS INTEGER);

		IF availableQty < requiredQty THEN
			SET OutputRoot.JSON.Data.Message = 'Insufficient Stock';
		END IF;		



		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;